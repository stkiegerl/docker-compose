version: '3.8'

services:
  database-server:
    # using .env file to configure e.g. version number or other currently static variables
    image: mysql:8.0
    container_name: contdel-db-server
    restart: always
    # setting environment variables
    environment:
      MYSQL_DATABASE: 'contdel'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'fhj'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    # Where our data will be persisted
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./mysql-init-files:/docker-entrypoint-initdb.d
    # check for status for depends_on conditions for api container start = service_healthy
    # otherwise no connection is possible at startup, alternative will be to refactor node implementation
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 20s # Estimated time to boot.

  # using redis for caching server, therefor we will use existing image
  # currently we not need any special configuration, so the docker-compose configuration is simple
  cache-server:
    image: redis
    container_name: contdel-cache-server
    ports:
      - '6379:6379'
    restart: always

  # at last we build our own image by using Dockerfile in Sub-Directory
  api:
    container_name: contdel-api-server
    build: ./app
    # container will be started after dependencies are fulfilled
    depends_on:
      cache-server:
        condition: service_started
      database-server:
        condition: service_healthy
    ports:
      - "8181:8181"
    environment:
      SERVER_PORT: 8181
      DB_SERVER: database-server
      CACHE_SERVER: cache-server